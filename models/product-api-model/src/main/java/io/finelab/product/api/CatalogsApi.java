/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.1.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package io.finelab.product.api;

import io.finelab.product.api.model.Catalog;
import io.finelab.product.api.model.CatalogPage;
import io.finelab.product.api.model.Problem;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2022-09-12T22:44:55.180417+02:00[Europe/Copenhagen]")
@Validated
@RequestMapping("${openapi.product.base-path:}")
public interface CatalogsApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /catalogs/{id}
     * Get product catalog by id
     *
     * @param id  (required)
     * @return OK (status code 200)
     *         or Unauthorized (status code 401)
     *         or Forbidden (status code 403)
     *         or Not found (status code 404)
     *         or Internal Server Error (status code 500)
     */
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/catalogs/{id}",
        produces = { "application/json", "application/problem+json" }
    )
    default ResponseEntity<Catalog> getProductCatalog(
         @PathVariable("id") String id
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"tenant_name\" : \"finelab\", \"valid_from\" : \"2022-05-07T09:12:28Z\", \"expired_at\" : \"2000-01-23T04:56:07.000+00:00\", \"display_name\" : \"Privatforsikring\", \"url\" : \"https://api.finelab.io/catalogs/1234\", \"content_language\" : \"da_DK\", \"products\" : { \"items\" : [ { \"number\" : \"7000\", \"catalog_url\" : \"https://api.finelab.io/catalogs/127635\", \"name\" : \"car_insurance\", \"id\" : \"id\", \"expired_at\" : \"2000-01-23T04:56:07.000+00:00\", \"display_name\" : \"Bilforsikring\", \"published_at\" : \"2000-01-23T04:56:07.000+00:00\", \"url\" : \"https://api.finelab.io/products/81236871\", \"revision\" : 1 }, { \"number\" : \"7000\", \"catalog_url\" : \"https://api.finelab.io/catalogs/127635\", \"name\" : \"car_insurance\", \"id\" : \"id\", \"expired_at\" : \"2000-01-23T04:56:07.000+00:00\", \"display_name\" : \"Bilforsikring\", \"published_at\" : \"2000-01-23T04:56:07.000+00:00\", \"url\" : \"https://api.finelab.io/products/81236871\", \"revision\" : 1 } ], \"url\" : \"https://api.finelab.io/products\" }, \"revision\" : 1, \"valid_to\" : \"2022-05-07T09:12:28Z\", \"business_unit_name\" : \"private_customers\", \"name\" : \"private_insurance\", \"currency\" : \"DKK\", \"id\" : \"id\", \"published_at\" : \"2022-05-07T09:12:28Z\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/problem+json"))) {
                    String exampleString = "Custom MIME type example not yet supported: application/problem+json";
                    ApiUtil.setExampleResponse(request, "application/problem+json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /catalogs
     * Get product catalogs.
     *
     * @return OK (status code 200)
     *         or Unauthorized (status code 401)
     *         or Forbidden (status code 403)
     *         or Internal Server Error (status code 500)
     */
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/catalogs",
        produces = { "application/json", "application/problem+json" }
    )
    default ResponseEntity<CatalogPage> getProductCatalogs(
        
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"items\" : [ { \"tenant_name\" : \"finelab\", \"valid_from\" : \"2022-05-07T09:12:28Z\", \"expired_at\" : \"2000-01-23T04:56:07.000+00:00\", \"display_name\" : \"Privatforsikring\", \"url\" : \"https://api.finelab.io/catalogs/1234\", \"content_language\" : \"da_DK\", \"revision\" : 1, \"valid_to\" : \"2022-05-07T09:12:28Z\", \"business_unit_name\" : \"private_customers\", \"name\" : \"private_insurance\", \"currency\" : \"DKK\", \"id\" : \"id\", \"published_at\" : \"2022-05-07T09:12:28Z\" }, { \"tenant_name\" : \"finelab\", \"valid_from\" : \"2022-05-07T09:12:28Z\", \"expired_at\" : \"2000-01-23T04:56:07.000+00:00\", \"display_name\" : \"Privatforsikring\", \"url\" : \"https://api.finelab.io/catalogs/1234\", \"content_language\" : \"da_DK\", \"revision\" : 1, \"valid_to\" : \"2022-05-07T09:12:28Z\", \"business_unit_name\" : \"private_customers\", \"name\" : \"private_insurance\", \"currency\" : \"DKK\", \"id\" : \"id\", \"published_at\" : \"2022-05-07T09:12:28Z\" } ], \"url\" : \"https://api.finelab.io/catalogs\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/problem+json"))) {
                    String exampleString = "Custom MIME type example not yet supported: application/problem+json";
                    ApiUtil.setExampleResponse(request, "application/problem+json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
